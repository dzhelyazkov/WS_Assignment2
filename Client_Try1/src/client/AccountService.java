
package client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AccountService", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AccountService {


    /**
     * 
     * @param arg0
     * @return
     *     returns client.Account
     * @throws AccountNameExistsException_Exception
     * @throws InvalidAccountParameterException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "register", targetNamespace = "http://service/", className = "client.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://service/", className = "client.RegisterResponse")
    @Action(input = "http://service/AccountService/registerRequest", output = "http://service/AccountService/registerResponse", fault = {
        @FaultAction(className = InvalidAccountParameterException_Exception.class, value = "http://service/AccountService/register/Fault/InvalidAccountParameterException"),
        @FaultAction(className = AccountNameExistsException_Exception.class, value = "http://service/AccountService/register/Fault/AccountNameExistsException")
    })
    public Account register(
        @WebParam(name = "arg0", targetNamespace = "")
        Account arg0)
        throws AccountNameExistsException_Exception, InvalidAccountParameterException_Exception
    ;

}
